@page "/Compras/Create"
@inject ComprasService comprasService
@inject LibrosService libroService
@inject NavigationManager navigate
@rendermode InteractiveServer

<PageTitle>Crear Compra</PageTitle>

<EditForm model="compra" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container mt-5">
        <div class="card shadow-lg rounded-4">
            <div class="card-header bg-dark text-white text-center rounded-top-4">
                <div class="card-title">Crear Nueva Compra</div>
            </div>

            <div class="card-body">
                <div class="row g-4">
                    <div class="col-3 ms-5">
                        <label class="form-label"><strong>Título</strong></label>
                        <InputDate class="form-control" @bind-value="compra.Fecha"></InputDate>
                        <ValidationMessage For="() => compra.Fecha" />
                    </div>

                    <div class="border border-success p-3 mt-3">
                        <h4>Libros</h4>
                        <div class="row">
                            <div class="col-auto input-group align-items-center">
                                <InputSelect class="form-select" @bind-Value="Detalle.LibroId">
                                    >
                                    <option disabled value="0">--- Seleccione un libro ---</option>
                                    @foreach (var libro in ListaLibros)
                                    {
                                        <option value="@libro.LibroId">@libro.LibroId -- @libro.Titulo</option>
                                    }
                                </InputSelect>

                                <label class="col-form-label input-group-text">Cantidad</label>
                                <InputNumber class="form-control" @bind-Value="Detalle.Cantidad" @onblur="CalcularPrecioVenta"></InputNumber>

                                <label class="col-form-label input-group-text">% Ganancia</label>
                                <InputNumber class="form-control" @bind-Value="Detalle.PorcentajeGanancia" @onblur="CalcularPrecioVenta"></InputNumber>

                                <label class="col-form-label input-group-text">Precio de Compra</label>
                                <InputNumber class="form-control" @bind-Value="Detalle.PrecioCompra" @onblur="CalcularPrecioVenta"></InputNumber>

                                <label class="col-form-label input-group-text">Precio de Venta</label>
                                <InputNumber class="form-control" @bind-Value="Detalle.PrecioVenta" readonly></InputNumber>

                                <button type="button" class="btn btn-success bi bi-floppy" @onclick="Sumar">Agregar detalle</button>
                            </div>
                        </div>
                        <div>
                            <table class="table table-light">
                                <thead class="table-striped">
                                    <tr class="text-center">
                                        <th>Libro</th>
                                        <th>Cantidad</th>
                                        <th>Ganancia</th>
                                        <th>Precio de Compra</th>
                                        <th>Precio de Venta</th>
                                        <th>Total</th>
                                        <th>Remover</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var detalle in compra.CompraDetalle)
                                    {
                                        <tr class="text-center">
                                            <td>@detalle.Libro?.Titulo</td>
                                            <td>@detalle.Cantidad</td>
                                            <td>@(detalle.PorcentajeGanancia.ToString("0.##")) %</td>
                                            <td>$@detalle.PrecioCompra</td>
                                            <td>$@detalle.PrecioVenta.ToString("N2")</td>
                                            <td>$@((detalle.PrecioCompra * detalle.Cantidad).ToString("N2"))</td>
                                            <td>
                                                <button type="button" @onclick="() => RemoverDetalle(detalle)" class="btn btn-outline-danger bi bi-trash">Remover</button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer text-center">
                <a href="/Compras/Index" class="bi bi-arrow-return-left btn btn-outline-primary">Volver</a>
                <button type="submit" class="bi bi-floppy btn btn-outline-success">Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Compras compra { get; set; } = new Compras();
    public List<Libros> ListaLibros { get; set; } = new List<Libros>();
    public Libros Libros { get; set; } = new Libros();
    public ComprasDetalle Detalle { get; set; } = new ComprasDetalle();

    public async Task CalcularPrecioVenta()
    {
        var isValid = Detalle.PrecioCompra > 0 && Detalle.PorcentajeGanancia > 0 && Detalle.Cantidad > 0;
        if (isValid)
            Detalle.PrecioVenta = Detalle.PrecioCompra + (Detalle.PrecioCompra * (Detalle.PorcentajeGanancia / 100));

        else
            Detalle.PrecioVenta = 0;
    }

    protected override async Task OnInitializedAsync()
    {
        ListaLibros = await libroService.Listar();
    }

    public async Task Guardar()
    {
        var resultado = await comprasService.Guardar(compra);
        navigate.NavigateTo("/Libros/Index");
    }

    public async Task Sumar()
    {
        var libro = await libroService.Buscar(Detalle.LibroId);
        Detalle.Libro = libro;

        compra.CompraDetalle.Add(Detalle);

        libro.Cantidad += Detalle.Cantidad;
        libro.Precio = Detalle.PrecioVenta;
        await libroService.Guardar(libro);

        Detalle = new ComprasDetalle();
    }

    public async Task RemoverDetalle(ComprasDetalle detalle)
    {
        compra.CompraDetalle.Remove(detalle);
        Detalle = detalle;

        var libro = await libroService.Buscar(detalle.LibroId);

        libro.Cantidad -= detalle.Cantidad;
    }
}
