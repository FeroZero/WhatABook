@page "/carrito"
@inject OrdenesService OrdenesService
@inject MetodoDePagoServices MetodoDePagoService
@inject NavigationManager navigate
@rendermode InteractiveServer

<h2>Mi carrito</h2>

@if (detalleOrdenes == null)
{
    <p>Cargando...</p>
}
else if (detalleOrdenes.Count == 0)
{
    <p>No tienes libros en el carrito.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Titulo</th>
                <th>Precio</th>
                <th>Cantidad</th>
                <th>Subtotal</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in detalleOrdenes)
            {
                <tr>
                    <td>@item.Libros.Titulo</td>
                    <td>@item.Libros.Precio.ToString("N2")</td>
                    <td>
                        <input type="number" min="1" max="@item.Libros.Cantidad"
                        @bind="item.Cantidad"
                        @bind:event="oninput"
                        class="form-control"
                        style="width: 80px" />
                        <button class="btn btn-sm btn-primary mt-1"
                        @onclick="() => ActualizarCantidad(item.DetalleId, item.Cantidad)">
                            Actualizar
                        </button>
                    </td>
                    <td>@item.Monto.ToString("N2")</td>
                    <td>
                        <button class="btn btn-danger btn-sm"
                        @onclick="() => Eliminar(item.DetalleId)">
                            Quitar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <label class="form-label"> Método de Pago </label>
    <InputSelect class="form-select" @bind-Value="Ordenes.MetodoDePagoId">
        <option disabled value="0">Seleccione un método de pago</option>
        @foreach (var metodo in metodosDePago)
        {
            <option value="@metodo.MetodoPagoId">@metodo.Descripcion</option>
        }
    </InputSelect>

    <h4>Total: @Ordenes.MontoTotal.ToString("N2")</h4>

    <button class="btn btn-success" @onclick="FinalizarCompra">Finalizar compra</button>
    <button class="btn btn-outline-danger ms-2" @onclick="Vaciar">Vaciar carrito</button>
}

@code {
    private List<MetodosDePagos> metodosDePago = new();
    private Ordenes Ordenes { get; set; } = new Ordenes() { MetodoDePagoId = 0 };
    private List<OrdenesDetalle> detalleOrdenes { get; set; } = new List<OrdenesDetalle>();

    protected override async Task OnInitializedAsync()
    {
        await CargarCarrito();
        metodosDePago = await MetodoDePagoService.Listar();
    }

    private async Task CargarCarrito()
    {
        detalleOrdenes = await OrdenesService.ObtenerOrdenes();
        Ordenes.MontoTotal = detalleOrdenes.Sum(x => x.Monto);
    }

    private async Task Eliminar(int detalleId)
    {
        await OrdenesService.EliminarLibroDelCarrito(detalleId);
        await CargarCarrito();
    }

    private async Task Vaciar()
    {
        await OrdenesService.VaciarCarrito();
        await CargarCarrito();
    }

    private async Task ActualizarCantidad(int detalleId, int nuevaCantidad)
    {
        await OrdenesService.ActualizarCantidadLibro(detalleId, nuevaCantidad);
        await CargarCarrito();
    }

    private async Task FinalizarCompra()
    {
        await OrdenesService.FinalizarOrden(Ordenes.MetodoDePagoId);
        navigate.NavigateTo("/Usuario/Index");
    }
}

